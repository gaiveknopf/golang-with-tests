Tipos Referência

Uma propriedade interessante dos maps é que você pode modificá-los sem passá-los como ponteiro. Isso é porque o
map é um tipo referência. Isso significa que ele contém uma referência à estrutura de dado que estamos utilizando, assim
como um ponteiro. Logo, quando criamos passamos o map como parâmetro, estamos alterando o map original e não sua cópia.
A estrutura de dados utilizada é uma tabela de dispersão ou mapa de hash, e você pode ler mais sobre
aqui: https://pt.wikipedia.org/wiki/Tabela_de_dispers%C3%A3o

É muito bom ter o map como referência, porque não importa o tamanho do map, só vai haver uma cópia.

Um conceito que os tipos referência apresentam é que maps podem ser um valor nil. Um map nil se comporta como um map
vazio durante a leitura, mas tentar inserir coisas em um map nil gera um panic em tempo de execução. Você pode saber
mais sobre maps aqui (em inglês).

Além disso, você nunca deve inicializar um map vazio, como:

    var m map[string]string

Ao invés disso, você pode inicializar um map vazio como fizemos lá em cima, ou usando a palavra-chave make para criar um
map para você:

    dictionary = map[string]string{}

// OU

    dictionary = make(map[string]string)

Ambas as abordagens criam um hash map vazio e apontam um dicionario para ele. Assim, nos certificamos que você nunca vai obter um panic em tempo de execução